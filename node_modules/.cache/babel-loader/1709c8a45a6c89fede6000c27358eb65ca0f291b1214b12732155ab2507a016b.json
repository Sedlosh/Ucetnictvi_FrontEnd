{"ast":null,"code":"/*  _____ _______         _                      _\r\n * |_   _|__   __|       | |                    | |\r\n *   | |    | |_ __   ___| |___      _____  _ __| | __  ___ ____\r\n *   | |    | | '_ \\ / _ \\ __\\ \\ /\\ / / _ \\| '__| |/ / / __|_  /\r\n *  _| |_   | | | | |  __/ |_ \\ V  V / (_) | |  |   < | (__ / /\r\n * |_____|  |_|_| |_|\\___|\\__| \\_/\\_/ \\___/|_|  |_|\\_(_)___/___|\r\n *                                _\r\n *              ___ ___ ___ _____|_|_ _ _____\r\n *             | . |  _| -_|     | | | |     |  LICENCE\r\n *             |  _|_| |___|_|_|_|_|___|_|_|_|\r\n *             |_|\r\n *\r\n *   PROGRAMOVÁNÍ  <>  DESIGN  <>  PRÁCE/PODNIKÁNÍ  <>  HW A SW\r\n *\r\n * Tento zdrojový kód je součástí výukových seriálů na\r\n * IT sociální síti WWW.ITNETWORK.CZ\r\n *\r\n * Kód spadá pod licenci prémiového obsahu a vznikl díky podpoře\r\n * našich členů. Je určen pouze pro osobní užití a nesmí být šířen.\r\n * Více informací na http://www.itnetwork.cz/licence\r\n */\n\nconst API_URL = \"http://localhost:8080\";\nconst fetchData = (url, requestOptions) => {\n  const apiUrl = `${API_URL}${url}`;\n  return fetch(apiUrl, requestOptions).then(response => {\n    if (!response.ok) {\n      throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);\n    }\n    if (requestOptions.method !== 'DELETE') return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const apiGet = (url, params) => {\n  const filteredParams = Object.fromEntries(Object.entries(params || {}).filter(_ref => {\n    let [_, value] = _ref;\n    return value != null;\n  }));\n  const apiUrl = `${url}?${new URLSearchParams(filteredParams)}`;\n  const requestOptions = {\n    method: \"GET\"\n  };\n  return fetchData(apiUrl, requestOptions);\n};\nexport const apiPost = (url, data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  return fetchData(url, requestOptions);\n};\nexport const apiPut = (url, data) => {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  return fetchData(url, requestOptions);\n};\nexport const apiDelete = url => {\n  const requestOptions = {\n    method: \"DELETE\"\n  };\n  return fetchData(url, requestOptions);\n};","map":{"version":3,"names":["API_URL","fetchData","url","requestOptions","apiUrl","fetch","then","response","ok","Error","status","statusText","method","json","catch","error","apiGet","params","filteredParams","Object","fromEntries","entries","filter","_ref","_","value","URLSearchParams","apiPost","data","headers","body","JSON","stringify","apiPut","apiDelete"],"sources":["C:/Users/stard/Dropbox/Fullstack_Project/invoice-client-starter/src/utils/api.js"],"sourcesContent":["/*  _____ _______         _                      _\r\n * |_   _|__   __|       | |                    | |\r\n *   | |    | |_ __   ___| |___      _____  _ __| | __  ___ ____\r\n *   | |    | | '_ \\ / _ \\ __\\ \\ /\\ / / _ \\| '__| |/ / / __|_  /\r\n *  _| |_   | | | | |  __/ |_ \\ V  V / (_) | |  |   < | (__ / /\r\n * |_____|  |_|_| |_|\\___|\\__| \\_/\\_/ \\___/|_|  |_|\\_(_)___/___|\r\n *                                _\r\n *              ___ ___ ___ _____|_|_ _ _____\r\n *             | . |  _| -_|     | | | |     |  LICENCE\r\n *             |  _|_| |___|_|_|_|_|___|_|_|_|\r\n *             |_|\r\n *\r\n *   PROGRAMOVÁNÍ  <>  DESIGN  <>  PRÁCE/PODNIKÁNÍ  <>  HW A SW\r\n *\r\n * Tento zdrojový kód je součástí výukových seriálů na\r\n * IT sociální síti WWW.ITNETWORK.CZ\r\n *\r\n * Kód spadá pod licenci prémiového obsahu a vznikl díky podpoře\r\n * našich členů. Je určen pouze pro osobní užití a nesmí být šířen.\r\n * Více informací na http://www.itnetwork.cz/licence\r\n */\r\n\r\n\r\nconst API_URL = \"http://localhost:8080\";\r\n\r\nconst fetchData = (url, requestOptions) => {\r\n    const apiUrl = `${API_URL}${url}`;\r\n\r\n    return fetch(apiUrl, requestOptions)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);\r\n            }\r\n\r\n            if (requestOptions.method !== 'DELETE')\r\n                return response.json();\r\n        })\r\n        .catch((error) => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport const apiGet = (url, params) => {\r\n    const filteredParams = Object.fromEntries(\r\n        Object.entries(params || {}).filter(([_, value]) => value != null)\r\n    );\r\n\r\n    const apiUrl = `${url}?${new URLSearchParams(filteredParams)}`;\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n    };\r\n\r\n    return fetchData(apiUrl, requestOptions);\r\n};\r\n\r\nexport const apiPost = (url, data) => {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetchData(url, requestOptions);\r\n};\r\n\r\nexport const apiPut = (url, data) => {\r\n    const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetchData(url, requestOptions);\r\n};\r\n\r\nexport const apiDelete = (url) => {\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n    };\r\n\r\n    return fetchData(url, requestOptions);\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,cAAc,KAAK;EACvC,MAAMC,MAAM,GAAI,GAAEJ,OAAQ,GAAEE,GAAI,EAAC;EAEjC,OAAOG,KAAK,CAACD,MAAM,EAAED,cAAc,CAAC,CAC/BG,IAAI,CAAEC,QAAQ,IAAK;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,gCAA+BF,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,UAAW,EAAC,CAAC;IAC7F;IAEA,IAAIR,cAAc,CAACS,MAAM,KAAK,QAAQ,EAClC,OAAOL,QAAQ,CAACM,IAAI,EAAE;EAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IACd,MAAMA,KAAK;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAACd,GAAG,EAAEe,MAAM,KAAK;EACnC,MAAMC,cAAc,GAAGC,MAAM,CAACC,WAAW,CACrCD,MAAM,CAACE,OAAO,CAACJ,MAAM,IAAI,CAAC,CAAC,CAAC,CAACK,MAAM,CAACC,IAAA;IAAA,IAAC,CAACC,CAAC,EAAEC,KAAK,CAAC,GAAAF,IAAA;IAAA,OAAKE,KAAK,IAAI,IAAI;EAAA,EAAC,CACrE;EAED,MAAMrB,MAAM,GAAI,GAAEF,GAAI,IAAG,IAAIwB,eAAe,CAACR,cAAc,CAAE,EAAC;EAC9D,MAAMf,cAAc,GAAG;IACnBS,MAAM,EAAE;EACZ,CAAC;EAED,OAAOX,SAAS,CAACG,MAAM,EAAED,cAAc,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMwB,OAAO,GAAGA,CAACzB,GAAG,EAAE0B,IAAI,KAAK;EAClC,MAAMzB,cAAc,GAAG;IACnBS,MAAM,EAAE,MAAM;IACdiB,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC7B,CAAC;EAED,OAAO3B,SAAS,CAACC,GAAG,EAAEC,cAAc,CAAC;AACzC,CAAC;AAED,OAAO,MAAM8B,MAAM,GAAGA,CAAC/B,GAAG,EAAE0B,IAAI,KAAK;EACjC,MAAMzB,cAAc,GAAG;IACnBS,MAAM,EAAE,KAAK;IACbiB,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC7B,CAAC;EAED,OAAO3B,SAAS,CAACC,GAAG,EAAEC,cAAc,CAAC;AACzC,CAAC;AAED,OAAO,MAAM+B,SAAS,GAAIhC,GAAG,IAAK;EAC9B,MAAMC,cAAc,GAAG;IACnBS,MAAM,EAAE;EACZ,CAAC;EAED,OAAOX,SAAS,CAACC,GAAG,EAAEC,cAAc,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}